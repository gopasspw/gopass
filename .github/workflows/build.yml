name: Build gopass

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: block
        allowed-endpoints: >
          github.com:443
          objects.githubusercontent.com:443
          proxy.golang.org:443
          raw.githubusercontent.com:443
          storage.googleapis.com:443
          sum.golang.org:443
          golang.org:443
          go.dev:443
          azure.archive.ubuntu.com:443
          archive.ubuntu.com:443
          security.ubuntu.com:443
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: '1.24'
    - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Ubuntu Dependencies
      run: sudo apt-get install --yes git gnupg
    - run: git config --global user.name nobody
    - run: git config --global user.email foo.bar@example.org

    -
      name: Debug
      run:  |
        echo "Go env ------------------"
        pwd
        echo ${HOME}
        echo ${GITHUB_WORKSPACE}
        echo ${GOPATH}
        echo ${GOROOT}
        env  

    - name: Build and Unit Test
      run: make gha-linux
    - name: Integration Test
      run: make test-integration

  container:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        env:
          IMAGE_NAME: ${{ github.repository }}
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build container image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  windows:
    runs-on: windows-latest
    defaults:
      run:
          shell: msys2 {0}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - uses: msys2/setup-msys2@61f9e5e925871ba6c9e3e8da24ede83ea27fa91f # v2.27.0
      with:
        release: false
        path-type: inherit
        install: >-
          base-devel
          git

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: '1.24'

    - run: git config --global user.name nobody
    - run: git config --global user.email foo.bar@example.org
      
    - name: Build and Unit Test
      run: make gha-windows

  macos:
    runs-on: macos-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: '1.24'

    - run: git config --global user.name nobody
    - run: git config --global user.email foo.bar@example.org
      
    - name: Build and Unit Test
      run: make gha-osx
      env:
        SLOW_TEST_FACTOR: 100 

