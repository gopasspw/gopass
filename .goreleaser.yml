# goreleaser.yml
# Release automation
#
# Build customization
project_name: gopass

before:
  hooks:
    - make clean
    - make completion
    - go mod download

builds:
  - id: gopass
    binary: gopass
    flags:
      - -trimpath
      - -tags=netgo
    env:
      - CGO_ENABLED=0
    asmflags:
      - all=-trimpath={{.Env.HOME}}
    gcflags:
      - all=-trimpath={{.Env.HOME}}
    ldflags: |
      -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.CommitDate}} -extldflags '-static'
    goos:
      - darwin
      - freebsd
      - linux
      - openbsd
      - windows
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - 6
      - 7
    mod_timestamp: '{{ .CommitTimestamp }}'
archives:
  - id: gopass
    name_template: "{{.Binary}}-{{.Version}}-{{.Os}}-{{.Arch}}{{ if .Arm }}v{{.Arm }}{{ end }}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - CHANGELOG.md
      - LICENSE
      - README.md
      - bash.completion
      - fish.completion
      - zsh.completion

release:
  github:
    owner: gopasspw
    name: gopass
  draft: false
  prerelease: auto

nfpms:
  - id: gopass_deb
    vendor: Gopass Authors
    homepage: "https://www.gopass.pw"
    maintainer: "Gopass Authors <gopass@gopass.pw>"
    description: |-
      gopass password manager - full featured CLI replacement for pass, designed for teams.
       .
      gopass is a simple but powerful password manager for your terminal. It is a
      Pass implementation in Go that can be used as a drop in replacement.
       .
      Every secret lives inside of a gpg (or: age) encrypted textfile. These secrets
      can be organized into meaninful hierachies and are by default versioned using
      git.
       .
      This package contains the main gopass binary from gopass.pw. In Debian and
      Ubuntu there is an unfortunate name clash with another gopass package. That is
      completely different and not related to this package.
    license: MIT
    formats:
      - deb
    dependencies:
      - git
      - gnupg
    recommends:
      - rng-tools
      - bash-completion
  - id: gopass_rpm
    vendor: Gopass Authors
    homepage: "https://www.gopass.pw"
    maintainer: "Gopass Authors <gopass@gopass.pw>"
    description: |-
      gopass password manager - full featured CLI replacement for pass, designed for teams.

      gopass is a simple but powerful password manager for your terminal. It is a
      Pass implementation in Go that can be used as a drop in replacement.

      Every secret lives inside of a gpg (or: age) encrypted textfile. These secrets
      can be organized into meaninful hierachies and are by default versioned using
      git.
    license: MIT
    formats:
      - rpm
    dependencies:
      - git
      - gnupg2
    recommends:
      - rng-tools
      - bash-completion

source:
  enabled: true
  name_template: "{{.ProjectName}}-{{.Version}}"
  
checksum:
  name_template: "{{.ProjectName}}_{{.Version}}_SHA256SUMS"

milestones:
  -
    repo:
      owner: gopasspw
      name: gopass
    close: true
    fail_on_error: false
    name_template: "{{ .Major }}.{{ .Minor }}.{{ .Patch }}"

signs:
  -
    id: gopass
    artifacts: checksum
    args: ["--batch", "-u", "{{ .Env.GPG_FINGERPRINT }}", "--armor", "--output", "${signature}", "--detach-sign", "${artifact}"]

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
sboms:
  - artifacts: archive
  - id: source # Two different sbom configurations need two different IDs
    artifacts: source
